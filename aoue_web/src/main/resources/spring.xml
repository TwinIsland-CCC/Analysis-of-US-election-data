<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
 	<!-- 1、写一个扫描包,开启注解组件加载器 -->
    <context:component-scan base-package="com.nd"/>
    
    <!-- 2、引入外部属性资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    
    <!-- 3、数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
    </bean>
    
    <!-- 4、写一个SqlSessionFactory,mybatis基本配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 批量取别名-->
        <property name="typeAliasesPackage" value="com.nd.entity"/>
        <!-- 引入mapper -->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <!--列名下划线与实体类匹配-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
        <!-- 使用pageHelper分页插件 -->
        <property name="plugins">
           <array>
              <bean class="com.github.pagehelper.PageInterceptor">
                 <property name="properties">
                    <value>
                      helperDialect=mysql
                      reasonable=true
                    </value>
                 </property>
              </bean>
           </array>
        </property>
    </bean>
    
    <!-- 5、生成dao层代理 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
        <property name="basePackage" value="com.nd.dao"/>
    </bean>
    
    <!-- 6、spring声明式事务 -->
    <!-- 写一个事务管理器，也是切面类 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入dataSource -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 第一种：注解方式 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
    
    <!-- 第二种：配置方式 -->
    <!-- 给方法加强事务 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
           <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 关联事务 -->
    <aop:config>
        <!-- 切点表达式 -->
        <aop:pointcut expression="execution(* com.nd.service.*.*(..))" id="pointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

</beans>
